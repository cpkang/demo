(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{545:function(t,s,a){"use strict";a.r(s);var n=a(24),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"项目中的一些知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目中的一些知识点"}},[t._v("#")]),t._v(" 项目中的一些知识点")]),t._v(" "),a("h2",{attrs:{id:"一、关于vue-config-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、关于vue-config-js"}},[t._v("#")]),t._v(" 一、关于vue.config.js")]),t._v(" "),a("p",[a("code",[t._v("vue.config.js")]),t._v(" 是一个可选的配置文件，如果项目的根目录中存在这个文件，那么它会被 "),a("code",[t._v("@vue/cli-service")]),t._v(" 自动加载。")]),t._v(" "),a("p",[t._v("这个文件应该导出一个包含了选项的对象。")]),t._v(" "),a("h3",{attrs:{id:"_1-publicpath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-publicpath"}},[t._v("#")]),t._v(" 1.publicPath")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Type: "),a("code",[t._v("string")])])]),t._v(" "),a("li",[a("p",[t._v("Default: "),a("code",[t._v("'/'")])])])]),t._v(" "),a("p",[t._v("​\t\t部署应用包时的基本 URL。")]),t._v(" "),a("h3",{attrs:{id:"_2-outputdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-outputdir"}},[t._v("#")]),t._v(" 2.outputDir")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Type: "),a("code",[t._v("string")])])]),t._v(" "),a("li",[a("p",[t._v("Default: "),a("code",[t._v("'dist'")])])])]),t._v(" "),a("p",[t._v("​\t\t当运行 "),a("code",[t._v("vue-cli-service build")]),t._v(" 时生成的生产环境构建文件的目录。注意目标目录的内容在构建之前会被清除 (构建时传入 "),a("code",[t._v("--no-clean")]),t._v(" 可关闭该行为)。")]),t._v(" "),a("h3",{attrs:{id:"_3-assestdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-assestdir"}},[t._v("#")]),t._v(" 3.assestDir")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Type: "),a("code",[t._v("string")])])]),t._v(" "),a("li",[a("p",[t._v("Default: "),a("code",[t._v("''")])])])]),t._v(" "),a("p",[t._v("​\t\t放置生成的静态资源（js、css、img、font）的（相对于"),a("code",[t._v("outputDir")]),t._v("的）目录。")]),t._v(" "),a("h3",{attrs:{id:"_4-lintonsave"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-lintonsave"}},[t._v("#")]),t._v(" 4.lintOnSave")]),t._v(" "),a("ul",[a("li",[t._v("Type: "),a("code",[t._v("boolean")]),t._v(" | "),a("code",[t._v("'warning'")]),t._v(" | "),a("code",[t._v("'default'")]),t._v(" | "),a("code",[t._v("'error'")])]),t._v(" "),a("li",[t._v("Default: "),a("code",[t._v("'default'")])])]),t._v(" "),a("p",[t._v("​\t\t是否在开发环境下通过 "),a("a",{attrs:{href:"https://github.com/webpack-contrib/eslint-loader",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-loader"),a("OutboundLink")],1),t._v(" 在每次保存时 lint 代码。")]),t._v(" "),a("h3",{attrs:{id:"_5-productionsourcemap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-productionsourcemap"}},[t._v("#")]),t._v(" 5.productionSourceMap")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Type: "),a("code",[t._v("boolean")])])]),t._v(" "),a("li",[a("p",[t._v("Default: "),a("code",[t._v("true")])]),t._v(" "),a("p",[t._v("如果你不需要生产环境的 source map , 可以将其设置为false以加速生产环境构建。设置之后就不会生成map文件。")])])]),t._v(" "),a("h3",{attrs:{id:"_6-devserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-devserver"}},[t._v("#")]),t._v(" 6.devServer")]),t._v(" "),a("h4",{attrs:{id:"_1-host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-host"}},[t._v("#")]),t._v(" (1) host")]),t._v(" "),a("ul",[a("li",[t._v("Type:"),a("code",[t._v("'local-ip' | 'local-ipv4' | 'local-ipv6'")]),t._v(" "),a("code",[t._v("string")])])]),t._v(" "),a("p",[t._v("​\t\t指定要使用的 host。如果你想让你的服务器可以被外部访问，像这样指定：")]),t._v(" "),a("p",[t._v("​\t\t"),a("code",[t._v("host: '0.0.0.0'")])]),t._v(" "),a("h4",{attrs:{id:"_2-port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-port"}},[t._v("#")]),t._v(" (2) port")]),t._v(" "),a("ul",[a("li",[t._v("Type:"),a("code",[t._v("'auto'")]),t._v(" "),a("code",[t._v("string")]),t._v(" "),a("code",[t._v("number")])])]),t._v(" "),a("p",[t._v("​\t\t指定监听请求的端口号，例如：")]),t._v(" "),a("p",[t._v("​\t\t"),a("code",[t._v("port:10086")])]),t._v(" "),a("h4",{attrs:{id:"_3-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-proxy"}},[t._v("#")]),t._v(" (3) proxy")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Type: "),a("code",[t._v("string | Object")])]),t._v(" "),a("p",[t._v("如果你的前端应用和后端API服务器没有运行在同一个主机上，你需要在开发环境下将API请求代理到API服务器。这个问题可以通过"),a("code",[t._v("vue.config.js")]),t._v("中的"),a("code",[t._v("devServer.proxy")]),t._v("选项来配置。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("devServer.proxy")]),t._v("可以是一个指向开发环境API服务器的字符串：")]),t._v(" "),a("p",[a("code",[t._v("proxy:'http://hocalhost:4000'")])]),t._v(" "),a("p",[t._v("这会告诉开发服务器将任何未知请求 (没有匹配到静态文件的请求) 代理到"),a("code",[t._v("http://hocalhost:4000")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("如果你想要更多的代理控制行为，也可以使用一个"),a("code",[t._v("path:options")]),t._v("成对的对象。")])])])])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("proxy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'/api'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("target")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<url>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("changeOrigin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'/foo'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("target")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<other_url>'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("changeOrigin的值为true,意味着控制服务器接收到的请求头中host设置成target；值如果为false，host就是浏览器发送过来的host")]),t._v(" "),a("h4",{attrs:{id:"_4-disablehostcheck"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-disablehostcheck"}},[t._v("#")]),t._v(" (4)disableHostCheck")]),t._v(" "),a("p",[a("strong",[t._v("绕过主机检查")]),t._v("。")]),t._v(" "),a("p",[t._v("用于配置是否关闭用于 DNS 重绑定的 HTTP 请求的 HOST 检查。 DevServer 默认只接受来自本地的请求，关闭后可以接受来自任何 HOST 的请求。 它通常用于搭配--host 0.0.0.0使用，因为你想要其它设备访问你本地的服务，但访问时是直接通过 IP 地址访问而不是 HOST 访问，所以需要关闭 HOST 检查。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("参考文档："),a("a",{attrs:{href:"https://cli.vuejs.org/zh/config/#vue-config-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue.config.js"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"二、解读vue-element-admin登录逻辑permission-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、解读vue-element-admin登录逻辑permission-js"}},[t._v("#")]),t._v(" 二、解读vue-element-admin登录逻辑permission.js")]),t._v(" "),a("p",[a("strong",[t._v("vue-element-admin中，permission主要负责全局路由守卫和登录判断，希望通过以下注释说明，帮助大家理解这个文件的逻辑")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./store'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Message "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'element-ui'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" NProgress "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nprogress'")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nprogress/nprogress.css'")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//auth文件主要依赖js-cookie模块，把getToken，setToken，removeToken设置在这里")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" getToken "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/utils/auth'")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//get-page-title文件主要是网站的标题，get-page-title通过依赖setting.js里的title变量修改网站标题")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果需要更改网站的标题，可以直接到setting.js修改title属性")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" getPageTitle "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/utils/get-page-title'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NProgress是封装的进度条，基本不用动")]),t._v("\nNProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("showSpinner")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//路由白名单列表，把路由添加到这个数组，不用登陆也可以访问")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" whiteList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n\n\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求路由时进度条开始")]),t._v("\n  NProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置标题")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPageTitle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的getToken()就是在上面导入的auth.js里的getToken()方法")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hasToken "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果存在token，即存在已登陆的令牌")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果用户存在令牌的情况请求登录页面，就让用户直接跳转到首页，避免存在重复登录的情况")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接跳转到首页，当然取决于你的路由重定向到哪里")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一定要关闭进度条")]),t._v("\n      NProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("done")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果已经有令牌的用户请求的不是登录页，是其他页面")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//就从Vuex里拿到用户的信息，这里也证明用户不是第一次登录了")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hasGetUserInfo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasGetUserInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//信息拿到后，用户请求哪就跳转哪")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有令牌，但是没有用户信息，证明用户是第一次登录，通过Vuex设置用户信息")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user/getInfo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置好了之后，依然可以请求哪就跳转哪")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果出错了，把令牌去掉，并让用户重新去到登录页面")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user/resetToken'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          Message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Has Error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/login?redirect=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关闭进度条")]),t._v("\n          NProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("done")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里是没有令牌的情况")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//还记得上面的白名单吗，现在起作用了")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//whiteList.indexOf(to.path) !== -1)判断用户请求的路由是否在白名单里")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("whiteList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不是-1就证明存在白名单里，不管你有没有令牌，都直接去到白名单路由对应的页面")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果这个页面不在白名单里，直接跳转到登录页面")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/login?redirect=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关闭进度条")]),t._v("\n      NProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("done")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每次请求结束后都需要关闭进度条")]),t._v("\n  NProgress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("done")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("转载于CSDN")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_43564110/article/details/105117991",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文出处"),a("OutboundLink")],1),t._v("by HaooNAME")])])}),[],!1,null,null,null);s.default=e.exports}}]);